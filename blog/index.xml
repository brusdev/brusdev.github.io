<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Blog on</title><link>/blog/</link><description>Recent content in Blog on</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><lastBuildDate>Tue, 06 Oct 2020 08:49:55 +0000</lastBuildDate><atom:link href="/blog/index.xml" rel="self" type="application/rss+xml"/><item><title>Welcome to ArtemisCloud</title><link>/blog/welcome-to-artemiscloud/</link><pubDate>Thu, 10 Dec 2020 00:00:00 +0000</pubDate><guid>/blog/welcome-to-artemiscloud/</guid><description>Welcome to the ArtemisCloud project, A community and set of images and tools to help deploy the ActiveMQ Artemis Broker.
Apache ActiveMQ Artemis is a multi protocol message broker that is hosted at Apache as part of the ActiveMQ umbrella. For more on the Apache Artemis Broker take a look at the documentation.</description></item><item><title>What is ArtemisCloud</title><link>/blog/what-is-artemiscloud/</link><pubDate>Thu, 10 Dec 2020 00:00:00 +0000</pubDate><guid>/blog/what-is-artemiscloud/</guid><description>ArtemisCloud is a collection of container images to allow users to deploy the ActiveMQ Artemis Broker from a simple standalone docker image to a fully blown Operator controlled deployment.
Apache ActiveMQ Artemis is a multi protocol message broker that is hosted at Apache as part of the ActiveMQ umbrella. For more on the Apache Artemis Broker take a look at the documentation.
All the Container Images can be found at quay.</description></item><item><title>Getting Started with the ArtemisCloud Operator</title><link>/blog/getting-started-with-the-artemiscloud-operator/</link><pubDate>Wed, 03 Feb 2021 00:00:00 +0000</pubDate><guid>/blog/getting-started-with-the-artemiscloud-operator/</guid><description>The ArtemisCloud Operator is a powerful tool that allows you to configure and manage ActiveMQ Artemis broker resources in a cloud environment. You can get the Operator running in just a few steps.
Prerequisite # Before you start, you need to have access to a running Kubernetes cluster environment. A Minikube instance running on your laptop will do fine. The ArtemisCloud Operator can also run in an Openshift cluster environment such as CodeReady Containers.</description></item><item><title>Deploying the Basic Broker Image</title><link>/blog/deploying-the-basic-broker-image/</link><pubDate>Fri, 29 Jan 2021 00:00:00 +0000</pubDate><guid>/blog/deploying-the-basic-broker-image/</guid><description>The basic Broker Container image is the easiest way to get the broker up and running as a container, we&amp;rsquo;ll explain what it is and how to run it locally.
The Basic Broker Container Image is the simplest of images to get started with, it uses environment variables to configure the broker and then starts it. You can find the basic Broker Container Image at quay.io
You can use your favourite tool to run the container but for this example we are using docker.</description></item><item><title>Scaling Up and Down Brokers with ArtemisCloud Operator</title><link>/blog/scaling-up-and-down-brokers-with-artemiscloud-operator/</link><pubDate>Thu, 04 Feb 2021 00:00:00 +0000</pubDate><guid>/blog/scaling-up-and-down-brokers-with-artemiscloud-operator/</guid><description>With ArtemisCloud operator one can easily manage the broker clusters. Either scaling up number of nodes(pods) when workload is high, or scaling down when some is not needed &amp;ndash; without messages being lost or stuck.
Prerequisite # Before you start you need have access to a running Kubernetes cluster environment. A Minikube running on your laptop will just do fine. The ArtemisCloud operator also runs in a Openshift cluster environment like CodeReady Container.</description></item><item><title>Setting up SSL connections with ArtemisCloud Operator</title><link>/blog/setting-up-ssl-connections-with-artemiscloud-operator/</link><pubDate>Wed, 03 Feb 2021 00:00:00 +0000</pubDate><guid>/blog/setting-up-ssl-connections-with-artemiscloud-operator/</guid><description>Security is always a concern in a production environment. With ArtemisCloud Operator You can easily configure and set up a broker with ssl-enabled acceptors. The blog explains how to do it.
The ActiveMQ Artemis broker supports a variety of network protocols(tcp, http, etc) including SSL(TLS) secure connections. Underneath it uses Netty as the base transport layer.
This article guides you through the steps to set up a broker to run in kubernetes (Minikube).</description></item><item><title>Using the custom init image</title><link>/blog/using-the-custom-init-image/</link><pubDate>Tue, 02 Feb 2021 00:00:00 +0000</pubDate><guid>/blog/using-the-custom-init-image/</guid><description>Starting from v0.18.1, the ArtemisCloud Operator enables you to specify a custom Init Container image. Specifying a custom Init Container image allows you to provide your own broker configuration within the Operator framework.
What is a custom Init Container image? # The ArtemisCloud Operator uses a Custom Resource Definition (CRD) to define the broker configuration. In Kubernetes, a CRD is a schema of configuration items or parameters. By creating a corresponding Custom Resource (CR) instance, you can specify values for configuration items in the CRD.</description></item></channel></rss>